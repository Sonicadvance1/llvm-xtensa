//===-- XtensaInstPrinter.h - Convert Xtensa MCInst to asm syntax -------*- C++ -*--//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This class prints a Xtensa MCInst to a .s file.
//
//===----------------------------------------------------------------------===//

#pragma once

#include "llvm/MC/MCInstPrinter.h"

namespace llvm {
class XtensaInstPrinter final : public MCInstPrinter {
public:
  XtensaInstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,
                 const MCRegisterInfo &MRI)
      : MCInstPrinter(MAI, MII, MRI) {}
  ~XtensaInstPrinter() {}

  void printInst(const MCInst *MI, raw_ostream &O, StringRef Annot,
                 const MCSubtargetInfo &STI) override;
  void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O,
                    const char *Modifier = nullptr);
  void printMemOperand(const MCInst *MI, int OpNo, raw_ostream &O,
                       const char *Modifier = nullptr);

  void printJumpTargetOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);

  void printUImm4Offset(const MCInst *MI, unsigned OpNum, unsigned Scale,
                         raw_ostream &O);

  template <int Scale>
  void printUImm4Offset(const MCInst *MI, unsigned OpNum,
                        raw_ostream &O) {
    printUImm4Offset(MI, OpNum, Scale, O);
  }

  void printShiftImmOperand(const MCInst *MI, unsigned OpNum, raw_ostream &O);

  // Autogenerated by tblgen.
  void printInstruction(const MCInst *MI, raw_ostream &O);
  static const char *getRegisterName(unsigned RegNo);
};
}

